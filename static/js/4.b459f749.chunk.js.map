{"version":3,"sources":["services/api.js","pages/index.jsx"],"names":["getUrl","terms","request","a","config","method","baseURL","data","params","headers","timeout","axios","response","status","Error","SubredditList","location","useLocation","useState","limit","setLimit","subredditData","setSubredditData","handleGetSubs","pathname","res","children","splice","useEffect","map","item","index","LinearProgress","color","postTitle","title","timestamp","created_utc","author","url","full_link","domain","img","thumbnail","style","width","margin","onClick","size"],"mappings":"8LAEMA,EAAS,SAACC,GAAD,gDAA8CA,IAoB9CC,EAnBF,uCAAG,WAAOD,GAAP,iBAAAE,EAAA,6DACTC,EAAS,CACdC,OAAQ,MACRC,QAASN,EAAOC,GAAS,MACzBM,KAAM,KACNC,OAAQ,KACRC,QAAS,KACTC,QAAS,KAPK,kBAWSC,IAAMP,GAXf,UAaU,OAFlBQ,EAXQ,QAaDC,OAbC,yCAasBD,EAASL,MAb/B,6DAeR,IAAIO,MAAJ,4CAfQ,yDAAH,sD,eCgDEC,UA7CO,WACrB,IAAMC,EAAWC,cADU,EAEDC,mBAAS,GAFR,mBAEpBC,EAFoB,KAEbC,EAFa,OAGeF,mBAAS,CAAC,KAHzB,mBAGpBG,EAHoB,KAGLC,EAHK,KAKrBC,EAAa,uCAAG,4BAAApB,EAAA,sEACHD,EAAQ,GAAD,OAAIc,EAASQ,SAAb,mBADJ,cACfC,EADe,yBAEdH,EAAiBG,EAAIlB,KAAKmB,SAASC,OAAO,EAAGR,KAF/B,2CAAH,qDASnB,OAJAS,qBAAU,WACTL,MACE,CAACJ,EAAOH,IAGV,qCACC,cAAC,IAAD,IACCK,EAAcQ,KAAI,SAACC,EAAMC,GACzB,IAAKD,EAAKvB,KAAM,OAAO,cAACyB,EAAA,EAAD,CAAgBC,MAAM,cADV,IAE3B1B,EAASuB,EAATvB,KACR,OACC,cAAC,IAAD,CAEC2B,UAAW3B,EAAK4B,MAChBC,UAAW7B,EAAK8B,YAChBC,OAAQ/B,EAAK+B,OACbC,IAAKhC,EAAKiC,UACVC,OAAQlC,EAAKkC,OACbC,IAAKnC,EAAKoC,WANLZ,MAUR,eAAC,IAAD,CACCa,MAAO,CAAEC,MAAO,MAAOC,OAAQ,aAC/BC,QAAS,kBAAM3B,EAASD,EAAQ,IAChC6B,KAAK,SACLf,MAAM,OAJP,UAME,IANF","file":"static/js/4.b459f749.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getUrl = (terms) => `https://www.reddit.com/r/reactjs${terms}`;\nconst request = async (terms) => {\n\tconst config = {\n\t\tmethod: 'get',\n\t\tbaseURL: getUrl(terms || '10'),\n\t\tdata: null,\n\t\tparams: null,\n\t\theaders: null,\n\t\ttimeout: 10000,\n\t};\n\n\ttry {\n\t\tconst response = await axios(config);\n\n\t\tif (response.status === 200) return response.data;\n\t} catch (error) {\n\t\tthrow new Error(`Failed to get Reddit data. ${error}`);\n\t}\n};\n\nexport default request;\n","import React, { useState, useEffect } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useLocation } from 'react-router-dom';\nimport request from '../services/api';\nimport { Card, Filter, Button } from '../components';\n\nconst SubredditList = () => {\n\tconst location = useLocation();\n\tconst [limit, setLimit] = useState(5);\n\tconst [subredditData, setSubredditData] = useState([{}]);\n\n\tconst handleGetSubs = async () => {\n\t\tconst res = await request(`${location.pathname}.json?sort=new`);\n\t\treturn setSubredditData(res.data.children.splice(0, limit));\n\t};\n\n\tuseEffect(() => {\n\t\thandleGetSubs();\n\t}, [limit, location]);\n\n\treturn (\n\t\t<>\n\t\t\t<Filter />\n\t\t\t{subredditData.map((item, index) => {\n\t\t\t\tif (!item.data) return <LinearProgress color=\"secondary\" />;\n\t\t\t\tconst { data } = item;\n\t\t\t\treturn (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tpostTitle={data.title}\n\t\t\t\t\t\ttimestamp={data.created_utc}\n\t\t\t\t\t\tauthor={data.author}\n\t\t\t\t\t\turl={data.full_link}\n\t\t\t\t\t\tdomain={data.domain}\n\t\t\t\t\t\timg={data.thumbnail}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t<Button\n\t\t\t\tstyle={{ width: '90%', margin: '15px auto' }}\n\t\t\t\tonClick={() => setLimit(limit + 5)}\n\t\t\t\tsize=\"medium\"\n\t\t\t\tcolor=\"info\"\n\t\t\t>\n\t\t\t\t{' '}\n\t\t\t\t+ ver mais\n\t\t\t</Button>\n\t\t</>\n\t);\n};\n\nexport default SubredditList;\n"],"sourceRoot":""}