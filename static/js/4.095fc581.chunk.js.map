{"version":3,"sources":["services/api.js","pages/index.jsx"],"names":["getUrl","terms","request","a","config","method","baseURL","data","params","headers","timeout","axios","response","status","Error","SubredditList","location","useLocation","useState","limit","subType","subredditData","setSubredditData","handleGetSubs","pathname","res","children","useEffect","map","item","index","LinearProgress","color","dateUtc","postTitle","title","timestamp","created_utc","Date","getUTCDate","author","url","full_link","domain","img","thumbnail"],"mappings":"8LAEMA,EAAS,SAACC,GAAD,gDAA8CA,IAoB9CC,EAnBF,uCAAG,WAAOD,GAAP,iBAAAE,EAAA,6DACTC,EAAS,CACdC,OAAQ,MACRC,QAASN,EAAOC,GAAS,MACzBM,KAAM,KACNC,OAAQ,KACRC,QAAS,KACTC,QAAS,KAPK,kBAWSC,IAAMP,GAXf,UAaU,OAFlBQ,EAXQ,QAaDC,OAbC,yCAasBD,EAASL,MAb/B,6DAeR,IAAIO,MAAJ,4CAfQ,yDAAH,sD,eCyCEC,UAtCO,WACrB,IAAMC,EAAWC,cADU,EAEXC,mBAAS,MAAlBC,EAFoB,sBAGTD,mBAAS,MAApBE,EAHoB,sBAIeF,mBAAS,CAAC,KAJzB,mBAIpBG,EAJoB,KAILC,EAJK,KAMrBC,EAAa,uCAAG,4BAAApB,EAAA,sEACHD,EAAQ,GAAD,OAAIc,EAASQ,SAAb,mBADJ,cACfC,EADe,yBAEdH,EAAiBG,EAAIlB,KAAKmB,WAFZ,2CAAH,qDAenB,OAJAC,qBAAU,WACTJ,MACE,CAACJ,EAAOC,EAASJ,IAEbK,EAAcO,KAAI,SAACC,EAAMC,GAC/B,IAAKD,EAAKtB,KAAM,OAAO,cAACwB,EAAA,EAAD,CAAgBC,MAAM,cADJ,IAVnBC,EAYd1B,EAASsB,EAATtB,KACR,OACC,cAAC,IAAD,CAEC2B,UAAW3B,EAAK4B,MAChBC,WAjBoBH,EAiBK1B,EAAK8B,YAhBhB,IAAIC,KAAKL,GACLM,cAgBlBC,OAAQjC,EAAKiC,OACbC,IAAKlC,EAAKmC,UACVC,OAAQpC,EAAKoC,OACbC,IAAKrC,EAAKsC,WANLf","file":"static/js/4.095fc581.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getUrl = (terms) => `https://www.reddit.com/r/reactjs${terms}`;\nconst request = async (terms) => {\n\tconst config = {\n\t\tmethod: 'get',\n\t\tbaseURL: getUrl(terms || '10'),\n\t\tdata: null,\n\t\tparams: null,\n\t\theaders: null,\n\t\ttimeout: 10000,\n\t};\n\n\ttry {\n\t\tconst response = await axios(config);\n\n\t\tif (response.status === 200) return response.data;\n\t} catch (error) {\n\t\tthrow new Error(`Failed to get Reddit data. ${error}`);\n\t}\n};\n\nexport default request;\n","import React, { useState, useEffect } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { useLocation } from 'react-router-dom';\nimport request from '../services/api';\nimport { Card } from '../components';\n\nconst SubredditList = () => {\n\tconst location = useLocation();\n\tconst [limit] = useState('10');\n\tconst [subType] = useState(null);\n\tconst [subredditData, setSubredditData] = useState([{}]);\n\n\tconst handleGetSubs = async () => {\n\t\tconst res = await request(`${location.pathname}.json?sort=new`);\n\t\treturn setSubredditData(res.data.children);\n\t};\n\n\tconst getSpendHours = (dateUtc) => {\n\t\tconst utcDate = new Date(dateUtc);\n\t\tconst dts = utcDate.getUTCDate();\n\t\treturn dts;\n\t};\n\n\tuseEffect(() => {\n\t\thandleGetSubs();\n\t}, [limit, subType, location]);\n\n\treturn subredditData.map((item, index) => {\n\t\tif (!item.data) return <LinearProgress color=\"secondary\" />;\n\t\tconst { data } = item;\n\t\treturn (\n\t\t\t<Card\n\t\t\t\tkey={index}\n\t\t\t\tpostTitle={data.title}\n\t\t\t\ttimestamp={getSpendHours(data.created_utc)}\n\t\t\t\tauthor={data.author}\n\t\t\t\turl={data.full_link}\n\t\t\t\tdomain={data.domain}\n\t\t\t\timg={data.thumbnail}\n\t\t\t/>\n\t\t);\n\t});\n};\n\nexport default SubredditList;\n"],"sourceRoot":""}